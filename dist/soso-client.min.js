/**
 * SoSo v3.1.0
 * (c) 2016 Ruslan Ianberdin
 * @license MIT
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Soso=e()}(this,function(){"use strict";function t(){var t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,s=4294967295*Math.random()|0;return o[255&t]+o[t>>8&255]+o[t>>16&255]+o[t>>24&255]+"-"+o[255&e]+o[e>>8&255]+"-"+o[e>>16&15|64]+o[e>>24&255]+"-"+o[63&n|128]+o[n>>8&255]+"-"+o[n>>16&255]+o[n>>24&255]+o[255&s]+o[s>>8&255]+o[s>>16&255]+o[s>>24&255]}var e=function(t,e){this.url=t,this.log=!0,this.onmessage=null,this.onopen=null,this.ondirectmsg=null,this.onclose=null,this.onerror=null,this.sock=null,this.callbacks={},this.routes=[],this.connected=!1,this.cache={requests:[]},e||this.init()};e.prototype.init=function(){var t=this;this.sock=new WebSocket(this.url),this.sock.onmessage=function(e){var o=JSON.parse(e.data);if(t.onmessage&&t.onmessage(o),o.other.trans_id)t.callbacks[o.other.trans_id](o),delete t.callbacks[o.other.trans_id];else{t.ondirectmsg&&t.ondirectmsg(o);for(var n=0;n<t.routes.length;n++){var s=t.routes[n];o.model===s.model&&o.action==s.action&&s.func(o)}}if(t.log){var i="";o.other.sent_at&&(i=(new Date).getTime()-o.other.sent_at+"ms"),console.log("[CHAN] <-- "+o.model,o.action,o.log.code_str,o.log.user_msg,o.log.level_str,i)}},this.sock.onopen=function(e){1!==t.sock.readyState?t.connected=!1:(t.connected=!0,t._resendOfflineRequests()),t.onopen&&t.onopen(e)},this.sock.onclose=function(e){t.connected=!1,setTimeout(function(){t.log&&console.log("[SOSO] trying recconecting"),t.init()},1e3),t.onclose&&t.onclose(e)},this.sock.onerror=function(e){t.onerror&&t.onerror(e)}},e.prototype.handle=function(t,e,o){this.routes.push({model:t,action:e,func:o})},e.prototype.get=function(t,e,o,n){return this.request(t,"get",e,o,n)},e.prototype.search=function(t,e,o,n){return this.request(t,"search",e,o,n)},e.prototype.create=function(t,e,o,n){return this.request(t,"create",e,o,n)},e.prototype.update=function(t,e,o,n){return this.request(t,"update",e,o,n)},e.prototype.delete=function(t,e,o,n){return this.request(t,"delete",e,o,n)},e.prototype.flush=function(t,e,o,n){return this.request(t,"flush",e,o,n)},e.prototype.request=function(e,o,n,s,i){var r=this;return void 0===n&&(n={}),void 0===s&&(s={}),void 0===i&&(i={}),new Promise(function(c){s.sent_at=(new Date).getTime(),s.trans_id=t(),r.callbacks[s.trans_id]=c,r._send({model:e,action:o,data:n,log:i,other:s})})},e.prototype.send=function(t,e,o,n,s){void 0===o&&(o={}),void 0===n&&(n={}),void 0===s&&(s={}),this._send({model:t,action:e,data:o,log:s,other:n})},e.prototype._send=function(t){this.connected?(this.sock.send(JSON.stringify(t)),this.log&&console.log("[CHAN] --> ",t.model,t.action)):this.cache.requests.find(function(e){return e.action===t.action&&e.model===t.model&&JSON.stringify(e.data)===JSON.stringify(t.data)})||this.cache.requests.push(t)},e.prototype._resendOfflineRequests=function(){var t=this;if(this.connected)for(;this.cache.requests.length>0;)t._send(t.cache.requests.pop())};for(var o=[],n=0;n<256;n++)o[n]=(n<16?"0":"")+n.toString(16);return e});